name: Update News
on:
  schedule:
    - cron: "17 */6 * * *"   # alle 6h
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '18' }
      - name: Fetch RSS -> data/news.json
        run: |
          node - <<'NODE'
          const https=require('https'), fs=require('fs'), {parseStringPromise}=require('xml2js');
          const feeds=[
            "https://www.tagesschau.de/xml/rss2/",
            "https://www.heise.de/rss/heise-atom.xml",
            "https://www.cleanenergywire.org/rss.xml"
          ];
          function get(u){ return new Promise(res=>https.get(u,r=>{let d='';r.on('data',c=>d+=c);r.on('end',()=>res(d));}).on('error',()=>res(''))); }
          (async()=>{
            let all=[];
            for(const f of feeds){
              try{
                const xml=await get(f); if(!xml) continue;
                const js=await parseStringPromise(xml);
                const items=(js.rss?.channel?.[0]?.item || js.feed?.entry || []).slice(0,20);
                const rows = items.map(it=>({
                  title: (it.title?.[0] && it.title[0]._ ) || it.title?.[0] || "Ohne Titel",
                  link: (it.link?.[0]?.$.href) || it.link?.[0] || "#",
                  date: (it.pubDate?.[0]) || (it.updated?.[0]) || new Date().toISOString(),
                  source: (new URL((it.link?.[0]?.$.href)||it.link?.[0]||'https://example.com')).hostname
                }));
                all = all.concat(rows);
              }catch(e){}
            }
            fs.mkdirSync('data',{recursive:true});
            fs.writeFileSync('data/news.json', JSON.stringify(all.slice(0,80),null,2));
            console.log("OK, geschrieben:", all.length);
          })();
          NODE
      - name: Commit & Push
        run: |
          git config user.name github-actions
          git config user.email github-actions@users.noreply.github.com
          git add data/news.json
          git commit -m "chore: auto-update news.json" || echo "nichts zu committen"
          git push
